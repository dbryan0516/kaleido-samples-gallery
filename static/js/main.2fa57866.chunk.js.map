{"version":3,"sources":["Configure.js","utils.js","Shared.js","HDwallet.js","IPFS.js","OpenLaw.js","IDregistry.js","AuditLog.js","App.js","serviceWorker.js","index.js"],"names":["Configure","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateLocalStorage","localStorage","setItem","consortiaId","current","value","appCredsUsername","appCredsPassword","nodeRpcEndpoint","hdwalletRpcEndpoint","hdwalletWalletId","ipfsRpcEndpoint","openlawRpcEndpoint","openlawAccountEmail","openlawAccountPassword","idRegistryRpcEndpoint","alert","React","createRef","getItem","_this2","react_default","a","createElement","className","type","ref","onClick","Component","utils","bindLocalStorage","t","buildWeb3","priv","getContract","web3","contract","contractAddress","contractArgs","abi","JSON","parse","bytecode","ret","eth","Contract","deploy","data","arguments","err","console","error","buildServiceUrlWithCreds","serviceRpcEndpoint","prefix","startsWith","concat","replace","Web3","MissingConfig","header","Link","to","text","HDwallet","componentDidMount","blockExplorerUrl","endsWith","setState","msg","missingConfig","msgChanged","event","val","target","lockMsg","locked","fetchHdwallet","hdwalletAddress","hdwalletPrivateKey","fetchingHdwalletIndex","asyncToGenerator","regenerator_default","mark","_callee","hwa","wrap","_context","prev","next","hasHdwalletIndex","getHdwalletAccount","state","hdwalletIndex","sent","address","privateKey","stop","hdwalletIndexChanged","deployingContract","contractDeploying","deployContract","params","gas","contractJson","encodeABI","accounts","signTransaction","then","signed","sendSignedTransaction","rawTransaction","on","receipt","log","newInstance","contractFrom","from","transactionHash","getContractValue","methods","get","contractValue","hdwalletAccountIndex","headers","Headers","append","btoa","fetch","method","response","json","assertThisInitialized","Shared","disabled","onChange","rows","min","max","readOnly","href","substr","IPFS","fileChangedHandler","file","files","selectedFile","uploadToIpfs","uploadingFile","formData","FormData","body","r","ipfsLink","ipfsHash","Hash","uploadedFile","fileDescriptionChanged","fileDescription","getContractValues","contractFileDescription","contractIpfsHash","downloadFile","url","personal","getAccounts","theContract","deployObj","sendTransaction","_this3","fileRef","rel","convertUserObject","original","id","email","identifiers","identityProviderId","identifier","OpenLaw","processNDA","_ref","ndaTemplate","partyAOLUser","partyBOLUser","ctResponse","executionResult","agreements","html","preventDefault","loading","apiClient","login","openLawConfig","userName","password","getTemplate","templateName","getUserDetails","partyAEmail","partyBEmail","Openlaw","compileTemplate","content","isError","errorMessage","buildOpenLawParamsObj","execute","compiledTemplate","getAgreements","renderForReview","agreement","step1Active","step1Complete","step2Active","ndaPreviewText","t0","toString","_x","apply","uploadNDA","_ref2","_callee2","uploadParams","result","_context2","uploadContract","successMessage","ndaModalOpen","ndaAgreementId","_x2","userA","userB","templateId","title","creator","parameters","PartyA","partyA","PartyB","partyB","Length","ndaLength","PartyA Email","stringify","PartyA Officer","partyAOfficer","PartyA Officer Title","partyAOfficerTitle","PartyB Email","PartyB Officer","partyBOfficer","PartyB Officer Title","partyBOfficerTitle","overriddenParagraphs","readonlyEmails","editEmails","draftId","navigateToNda","_callee3","_context3","window","open","server","refreshPage","_callee4","_context4","location","reload","APIClient","root","auth","username","formLoading","Container","Image","src","process","Header","as","attached","style","marginLeft","fontSize","Segment","Subheader","Step","Group","ordered","completed","active","Content","Title","Description","Form","success","onSubmit","Grid","columns","divided","Row","Message","Column","Input","label","placeholder","Field","inline","textAlign","Button","primary","size","dangerouslySetInnerHTML","__html","Modal","closeIcon","image","wrapped","default","IDregistry","fetchDirectory","fetchingDirectory","dir","directoryContractAddress","directory","AuditLog","getNumberOfRecords","modifyingContract","validMsg","isJSON","str","e","addMsg","addingMsg","push","send","resp","auditRecordCount","fetchRecord","index","fetchingRecord","viewJsonMessage","record","logEntries","viewRecordId","viewPrettyJson","payload","viewRecordEntityAddress","entityAddress","editingContract","showEditingContract","clearContract","removeItem","changeContractAddress","editContractAddress","editContractAddressChanged","editContractAddressValid","length","editContractPanel","contractExistsInLocalStorage","getSize","records","Number","parseInt","_loop","i","color","key","cursor","dist","iconColor","_this4","overflowY","maxHeight","borderRight","renderTimelines","JSONPretty_default","App","HashRouter","basename","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2fa57866.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { PrimaryButton } from '@photic/design-kit';\n\nclass Configure extends Component {\n  constructor(props) {\n    super(props)\n    this.consortiaId = React.createRef()\n    this.appCredsUsername = React.createRef()\n    this.appCredsPassword = React.createRef()\n    this.nodeRpcEndpoint = React.createRef()\n    this.hdwalletRpcEndpoint = React.createRef()\n    this.hdwalletWalletId = React.createRef()\n    this.ipfsRpcEndpoint = React.createRef()\n    this.openlawRpcEndpoint = React.createRef()\n    this.openlawAccountEmail = React.createRef()\n    this.openlawAccountPassword = React.createRef()\n    this.idRegistryRpcEndpoint = React.createRef()\n  }\n\n  componentDidMount() {\n    this.consortiaId.current.value = localStorage.getItem('consortiaId');\n    this.appCredsUsername.current.value = localStorage.getItem('appCredsUsername');\n    this.appCredsPassword.current.value = localStorage.getItem('appCredsPassword');\n    this.nodeRpcEndpoint.current.value = localStorage.getItem('nodeRpcEndpoint');\n    this.hdwalletRpcEndpoint.current.value = localStorage.getItem('hdwalletRpcEndpoint');\n    this.hdwalletWalletId.current.value = localStorage.getItem('hdwalletWalletId');\n    this.ipfsRpcEndpoint.current.value = localStorage.getItem('ipfsRpcEndpoint');\n    this.openlawRpcEndpoint.current.value = localStorage.getItem('openlawRpcEndpoint');\n    this.openlawAccountEmail.current.value = localStorage.getItem('openlawAccountEmail');\n    this.openlawAccountPassword.current.value = localStorage.getItem('openlawAccountPassword');\n    this.idRegistryRpcEndpoint.current.value = localStorage.getItem('idRegistryRpcEndpoint');\n  }\n\n  updateLocalStorage = () => {\n    localStorage.setItem('consortiaId', this.consortiaId.current.value);\n    localStorage.setItem('appCredsUsername', this.appCredsUsername.current.value);\n    localStorage.setItem('appCredsPassword', this.appCredsPassword.current.value);\n    localStorage.setItem('nodeRpcEndpoint', this.nodeRpcEndpoint.current.value);\n    localStorage.setItem('hdwalletRpcEndpoint', this.hdwalletRpcEndpoint.current.value);\n    localStorage.setItem('hdwalletWalletId', this.hdwalletWalletId.current.value);\n    localStorage.setItem('ipfsRpcEndpoint', this.ipfsRpcEndpoint.current.value);\n    localStorage.setItem('openlawRpcEndpoint', this.openlawRpcEndpoint.current.value);\n    localStorage.setItem('openlawAccountEmail', this.openlawAccountEmail.current.value);\n    localStorage.setItem('openlawAccountPassword', this.openlawAccountPassword.current.value);\n    localStorage.setItem('idRegistryRpcEndpoint', this.idRegistryRpcEndpoint.current.value);\n    alert('latest settings saved!')\n  }\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h2>Configure</h2>\n        <h5>\n          This is needed so the samples can connect to your Kaleido environment. All information will be\n          persisted to browser local storage.\n        </h5>\n        <br />\n        <h5>Shared</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Consortia ID</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.consortiaId} />\n            <small>(ex: zzabcd1234)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">App credentials username</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.appCredsUsername} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">App credentials password</label>\n          <div className=\"col-sm-6\">\n            <input type=\"password\" className=\"form-control col-sm-12\" ref={this.appCredsPassword} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Node RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.nodeRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-rpc.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <h5>HDWallet</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">HDWallet RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.hdwalletRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-hdwallet.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">HDWallet wallet ID</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.hdwalletWalletId} />\n          </div>\n        </div>\n        <h5>IPFS</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">IPFS RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.ipfsRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-ipfs.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <h5>ID Registry</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">ID Registry RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.idRegistryRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-idregistry.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <h5>OpenLaw</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">OpenLaw RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.openlawRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-openlaw.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">OpenLaw account email</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.openlawAccountEmail} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">OpenLaw account password</label>\n          <div className=\"col-sm-6\">\n            <input type=\"password\" className=\"form-control col-sm-12\" ref={this.openlawAccountPassword} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <div className=\"col-sm-6\">\n          <button type=\"button\"className=\"btn btn-success\" onClick={() => this.updateLocalStorage()}>\n            Save\n          </button>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Configure;\n","import Web3 from 'web3'\n\nconst utils = {\n  bindLocalStorage(t) {\n    t.consortiaId = localStorage.getItem('consortiaId');\n    t.appCredsUsername = localStorage.getItem('appCredsUsername');\n    t.appCredsPassword = localStorage.getItem('appCredsPassword');\n    t.nodeRpcEndpoint = localStorage.getItem('nodeRpcEndpoint');\n    t.hdwalletRpcEndpoint = localStorage.getItem('hdwalletRpcEndpoint');\n    t.hdwalletWalletId = localStorage.getItem('hdwalletWalletId');\n    t.ipfsRpcEndpoint = localStorage.getItem('ipfsRpcEndpoint');\n    t.openlawRpcEndpoint = localStorage.getItem('openlawRpcEndpoint');\n    t.openlawAccountEmail = localStorage.getItem('openlawAccountEmail');\n    t.openlawAccountPassword = localStorage.getItem('openlawAccountPassword');\n    t.idRegistryRpcEndpoint = localStorage.getItem('idRegistryRpcEndpoint');\n  },\n\n  buildWeb3(t) {\n    if (t.appCredsUsername && t.appCredsPassword && t.nodeRpcEndpoint) {\n      priv.buildWeb3(t)\n    }\n  },\n\n  getContract(web3, contract, contractAddress, contractArgs) {\n    let abi = JSON.parse(contract.abi);\n    let bytecode = '0x' + contract.bytecode;\n    try {\n      let ret = new web3.eth.Contract(abi, contractAddress);\n      if (!contractAddress) {\n        // this is a new deployment, build the deploy object\n        ret = ret.deploy({\n          data: bytecode,\n          arguments: contractArgs\n        });\n      }\n      return ret;\n    } catch(err) {\n      console.error('Failed to get contract', err)\n    }\n    return null;\n  },\n\n  buildServiceUrlWithCreds(t, serviceRpcEndpoint) {\n    let prefix = serviceRpcEndpoint.startsWith('http://') ? 'http://' : 'https://'\n    return `${prefix}${t.appCredsUsername}:${t.appCredsPassword}@${serviceRpcEndpoint.replace(prefix, '')}`\n  }\n}\n\nconst priv = {\n  buildWeb3(t) {\n    t.web3 = new Web3(utils.buildServiceUrlWithCreds(t, t.nodeRpcEndpoint))\n  }\n}\n\nexport default utils ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction MissingConfig(props) {\n  return (\n    <main>\n      <div className=\"container\">\n        <h2>{props.header}</h2>\n        missing&nbsp;\n        <Link to=\"/\">\n          config\n        </Link>\n        <p>{props.text}</p>\n      </div>\n    </main>\n  )\n}\n\nexport default MissingConfig;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/hdwallet.json'\n// import { sha256 } from 'js-sha256'\nimport utils from './utils'\nimport MissingConfig from './Shared'\n\nclass HDwallet extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = { \n      missingConfig: false,    \n      msg: '',\n      locked: false,\n      hdwalletAddress: '',\n      hdwalletPrivateKey: '',\n      hdwalletIndex: '',\n      fetchingHdwalletIndex: false,\n      contractDeploying: false,\n      contractAddress: '',\n      contractFrom: '',\n      contractValue: '',\n      transactionHash: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.consortiaId || !this.appCredsUsername || !this.appCredsPassword || \n      !this.nodeRpcEndpoint || !this.hdwalletRpcEndpoint || !this.hdwalletWalletId) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n    this.blockExplorerUrl = this.nodeRpcEndpoint.endsWith('dev.photic.io') ? 'explorer-dev.photic.io' : 'explorer.kaleido.io'\n    this.setState(() => ({\n      msg: \"Sample message\"\n    }))\n  }\n\n  msgChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      msg: val\n    }));\n  };\n\n  lockMsg = () => {\n    this.setState(() => ({\n      locked: true\n    }));\n  };\n\n  fetchHdwallet = () => {\n    this.setState(() => ({\n      hdwalletAddress: '',\n      hdwalletPrivateKey: '',\n      fetchingHdwalletIndex: true\n    }), async () => {\n      if (this.hasHdwalletIndex()) {\n        let hwa = await this.getHdwalletAccount(this.state.hdwalletIndex)\n        this.setState(() => ({\n          hdwalletAddress: hwa.address,\n          hdwalletPrivateKey: hwa.privateKey,\n          fetchingHdwalletIndex: false\n        }));\n      }\n    });\n  }\n\n  hasHdwalletIndex = () => {\n    return this.state.hdwalletIndex && this.state.hdwalletIndex >= 0\n  }\n\n  hdwalletIndexChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      hdwalletIndex: val\n    }));\n  };\n  \n  deployingContract = () => {\n    this.setState(() => ({\n      contractDeploying: true\n    }), () => this.deployContract());\n  }\n\n  deployContract = () => {\n    let theContract = utils.getContract(this.web3, contractJson, '', [this.state.msg]);\n    let deployObj = theContract.encodeABI();\n    let params = {\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.accounts.signTransaction(params, `0x${this.state.hdwalletPrivateKey}`).then((signed) => {\n      this.web3.eth.sendSignedTransaction(signed.rawTransaction)\n        .on('receipt', (receipt) => {\n          console.log(receipt);\n        })\n        .on('error', (err) => {\n          console.error('Failed to deploy the smart contract. Error: ' + err);\n        })\n        .then((newInstance) => {\n          console.log(newInstance)\n          console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n          this.setState(() => ({\n            contractAddress: newInstance.contractAddress,\n            contractFrom: newInstance.from,\n            transactionHash: newInstance.transactionHash\n          }));\n        });\n    });\n  }\n\n  getContractValue = () => {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    theContract.methods.get().call().then((value) => {\n      console.log('\\tSmart contract current state: %j', value);\n      this.setState(() => ({\n        contractValue: value\n      }));\n    });\n  }\n\n  getHdwalletAccount = (hdwalletAccountIndex) => {\n    console.log('fetching hd wallet account to use')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('content-type', 'application/json')\n    headers.append('Accept', 'application/json, text/plain, */*',)\n    return fetch(`${this.hdwalletRpcEndpoint}/api/v1/wallets/${this.hdwalletWalletId}/accounts/${hdwalletAccountIndex}`, {\n      method: 'GET',\n      headers: headers\n    }).then(response => response.json())\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"HDWallet\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>HDWallet</h2>\n        <h5>\n          The purpose of this sample is to show how you can anonymously submit a transaction to the blockchain. We will deploy a \n          simple smart contract which stores and exposes a single value. \n        </h5>\n        <br />\n        <h6>\n          Step 1: Enter a message. This message is the value that will be included in the smart contract when we deploy it in the next step.\n        </h6>\n        <div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Message</label>\n            <div className=\"col-sm-7\">\n              <textarea disabled={this.state.locked} onChange={this.msgChanged} \n                        className=\"form-control\"\n                        rows=\"2\" value = {this.state.msg} />\n            </div>\n            { !this.state.locked ?\n            <div className=\"col-sm-3\">\n              <button disabled={!this.state.msg} \n                      type=\"button\" className=\"btn btn-primary\" onClick={() => this.lockMsg()}>\n                Next\n              </button>\n            </div> : null }\n          </div>\n          { this.state.locked ? \n            <div>\n              <h6>\n                Step 2: Let's choose an account generated by your HDWallet to sign the transaction that deploys \n                our contract containing the above message.\n              </h6>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet account index</label>\n                <div className=\"col-sm-2\">\n                  <input type=\"number\" min=\"0\" max=\"10000\" className=\"form-control col-sm-12\" \n                         disabled={this.state.contractDeploying}\n                         value={this.state.hdwalletIndex} onChange={this.hdwalletIndexChanged}></input>\n                </div>\n                { !this.state.contractDeploying ? \n                <div className=\"col-sm-3\">\n                  <button disabled={this.state.fetchingHdwalletIndex || !this.hasHdwalletIndex()} type=\"button\" \n                          className=\"btn btn-primary\" onClick={() => this.fetchHdwallet()}>\n                    Fetch HDWallet account\n                  </button>\n                </div> : null }\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet address</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.hdwalletAddress}></input>\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet signing key</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.hdwalletPrivateKey}></input>\n                </div>\n                { !this.state.contractDeploying && this.state.hdwalletAddress && this.state.hdwalletPrivateKey ? \n                <div className=\"col-sm-3\">\n                  <button type=\"button\" className=\"btn btn-success\" onClick={() => this.deployingContract()}>\n                    Deploy to blockchain!\n                  </button>\n                </div> : null }\n                { this.state.contractDeploying && !this.state.contractAddress ?\n                <div className=\"col-sm-3\">\n                  <button type=\"button\" disabled={true} className=\"btn btn-success\">\n                    Deploying to blockchain...\n                  </button>\n                </div>\n                : null}\n              </div>\n            </div> : null }\n            { this.state.contractAddress ? \n            <div>\n              <h6>\n                Step 3: Congrats!\n                <br />\n                The contract has been deployed to the following address: <i>{this.state.contractAddress}</i>.\n                <br />\n                On the blockchain ledger, this\n                <a target='blank' href={`https://${this.blockExplorerUrl}/tx/${this.state.transactionHash}?consortia=${this.consortiaId}&environment=${this.nodeRpcEndpoint.substr(8, 10)}`}> transaction </a> \n                shows that it originated from <i>{this.state.contractFrom}</i>. \n                Notice that this is the account you chose to use from your HDWallet and <b>not</b> your Kaleido node's account address. \n                For future transactions, you can sequentially iterate through the wallet accounts and obtain a different signing key for every transaction.\n                For complete anonymity you should never use a signing key more than once. \n              </h6>\n              <br />\n              <h6>Step 4: Verification - lets query the contract's value</h6>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">Contract value</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractValue}></input>\n                </div>\n                {!this.state.contractValue ?\n                <div className=\"col-sm-3\">\n                  <button type=\"button\" className=\"btn btn-primary\" \n                          onClick={() => this.getContractValue()}>\n                    Get contract value\n                  </button>\n                </div> : null }\n              </div>\n              {this.state.contractValue ? \n              <h6>\n                Conclusion: Notice that the value stored in the blockchain contract matches your message above.\n              </h6> : null }\n            </div> : null }\n          </div>  \n      </main>\n    );\n  }\n}\n\nexport default HDwallet;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/ipfs.json'\nimport utils from './utils'\nimport MissingConfig from './Shared'\n\nclass IPFS extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false,\n      selectedFile: null,\n      uploadingFile: false,\n      uploadedFile: false,\n      ipfsHash: '',\n      ipfsLink: '',\n      fileDescription: '',\n      contractDeploying: false,\n      contractAddress: '',\n      contractFileDescription: '',\n      contractIpfsHash: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint || !this.ipfsRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n    }\n  }\n\n  fileChangedHandler = (event) => {\n    const file = event.target.files[0]\n    if (!file) {\n      this.setState(() => ({\n        selectedFile: null\n      }))\n    } else {\n      this.setState(() => ({\n        selectedFile: file\n      }))  \n    }\n  }\n\n  uploadToIpfs = () => {\n    this.setState(() => ({\n      uploadingFile: true\n    }), () => {\n      const headers = new Headers();\n      headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n      headers.append('Accept', 'application/json, text/plain, */*',)  \n      const formData = new FormData()\n      formData.append('blob', this.state.selectedFile)\n      fetch(`${this.ipfsRpcEndpoint}/api/v0/add`, {\n        method: 'POST',\n        headers: headers,\n        body: formData\n      })\n      .then(r => r.json())\n      .then(data => {\n        console.log(data)\n        let ipfsLink = utils.buildServiceUrlWithCreds(this, `${this.ipfsRpcEndpoint}/api/v0`)\n        this.setState(() => ({\n          ipfsHash: data.Hash,\n          ipfsLink: `${ipfsLink}/cat/${data.Hash}`,\n          uploadedFile: true,\n          uploadingFile: false\n        })) \n      })\n    }) \n  }\n\n  fileDescriptionChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      fileDescription: val\n    })) \n  }\n\n  deployingContract = () => {\n    this.setState(() => ({\n      contractDeploying: true\n    }), () => this.deployContract());\n  }\n\n  async deployContract() {\n    let accounts = await this.web3.eth.personal.getAccounts();\n    let theContract = utils.getContract(this.web3, contractJson, '', [this.state.fileDescription, this.state.ipfsHash])\n    let deployObj = theContract.encodeABI();\n    let params = {\n      from: accounts[0],\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.sendTransaction(params)\n      .on('receipt', (receipt) => {\n        console.log(receipt);\n      })\n      .on('error', (err) => {\n        console.error('Failed to deploy the smart contract. Error: ' + err);\n      })\n      .then((newInstance) => {\n        console.log(newInstance)\n        console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n        this.setState(() => ({\n          contractAddress: newInstance.contractAddress\n        }));\n      });\n  }\n\n  getContractValues = () => {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    theContract.methods.get().call().then((data) => {\n      console.log('\\tSmart contract current state: %j', data);\n      this.setState(() => ({\n        contractFileDescription: data['0'],\n        contractIpfsHash: data['1']\n      }));\n    });\n  }\n\n  downloadFile = () => {\n    var headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('Accept', 'application/json, text/plain, */*',)\n    let url = `${this.ipfsRpcEndpoint}/api/v0/get/${this.state.ipfsHash}`\n    fetch(url, {\n      method: 'GET',\n      headers: headers\n    })\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"IPFS\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>IPFS</h2>\n        <h5>\n          The purpose of this sample is to show how you can add a file to IPFS, and then store a \n          description of the file along with the IPFS content hash in a blockchain smart contract. \n          This is a popular pattern for storing large amounts of data off-chain (in IPFS) and storing the \n          reference (IPFS content hash) of where the data is located on-chain.\n        </h5>\n        <br />\n        <h6>\n          Step 1: Add a file to IPFS and retrieve the IPFS hash back once it's been added.\n        </h6>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Upload a file</label>\n          <div className=\"col-sm-3\">\n            <input disabled={this.state.uploadedFile} type=\"file\" \n                   onChange={this.fileChangedHandler}\n                   ref={this.fileRef} />\n          </div>\n          { !this.state.uploadedFile ?\n          <div className=\"col-sm-5\">\n            <button disabled={!this.state.selectedFile || this.state.uploadingFile} type=\"button\" className=\"btn btn-primary\" \n                    onClick={() => this.uploadToIpfs()}>\n              Upload file\n            </button>\n          </div> : null }\n        </div>\n\n        { this.state.uploadedFile ? \n        <div>\n          <h6>\n            Step 2: The file has been added to IPFS with the following content hash: <i>{this.state.ipfsHash}</i>.\n            <br /> Enter a friendly file description for this file and then we can deploy the smart contract containing\n            the description and IPFS content hash.\n          </h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">File description</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={this.state.contractDeploying}\n                     onChange={this.fileDescriptionChanged} value={this.state.fileDescription} />\n            </div>\n            { !this.state.contractDeploying ? \n            <div className=\"col-sm-3\">\n              <button disabled={!this.state.fileDescription} type=\"button\" className=\"btn btn-success\" \n                      onClick={() => this.deployingContract()}>\n                Deploy to blockchain!\n              </button>\n            </div> : null }\n            { this.state.contractDeploying && !this.state.contractAddress ?\n            <div className=\"col-sm-3\">\n              <button type=\"button\" disabled={true} className=\"btn btn-success\">\n                Deploying to blockchain...\n              </button>\n            </div>\n            : null }\n          </div>\n        </div> : null }\n\n        { this.state.contractAddress ? \n        <div>\n          <h6>\n            Step 3: Congrats!\n            <br />\n            The contract has been deployed to the following address: <i>{this.state.contractAddress}</i>.\n          </h6>\n          <br />\n          <h6>Step 4: Verification - lets query the contract's values</h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">File description</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractFileDescription}></input>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">IPFS content hash</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractIpfsHash}></input>\n            </div>\n            {!this.state.contractFileDescription && !this.state.contractIpfsHash ?\n            <div className=\"col-sm-3\">\n              <button type=\"button\" className=\"btn btn-primary\" \n                      onClick={() => this.getContractValues()}>\n                Get contract values\n              </button>\n            </div> : null }\n          </div>\n        </div> : null }\n\n        { this.state.contractFileDescription && this.state.contractIpfsHash ?\n        <div>\n          <h6>Conclusion: Download file from IPFS using the IPFS content hash</h6>\n          <div className=\"col-sm-3\">\n            <a href={this.state.ipfsLink}          \n               target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\">\n              Download file\n            </a>\n          </div>\n        </div> : null }\n      </main>\n    );\n  }\n}\n\nexport default IPFS;\n","import React, { Component } from 'react';\nimport { Container, Image, Input, Message, Modal, Button, Form, Grid, Header, Segment, Step } from 'semantic-ui-react';\nimport './App.css';\nimport { APIClient, Openlaw } from 'openlaw';\nimport utils from './utils'\nimport MissingConfig from './Shared'\n\nclass OpenLaw extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n\n    this.openLawConfig = {\n      server: utils.buildServiceUrlWithCreds(this, this.openlawRpcEndpoint),\n      templateName: 'NDA DEMO (KALEIDO)',\n      userName: this.openlawAccountEmail,\n      password: this.openlawAccountPassword\n    }\n\n    this.apiClient = new APIClient({\n      root: this.openlawRpcEndpoint,\n      auth: {\n        username: this.appCredsUsername,\n        password: this.appCredsPassword\n      }\n    });\n    \n    this.state = {\n      missingConfig: false,\n      formLoading: false,\n      errorMessage: \"\",\n      successMessage: \"\",\n      step1Complete: false,\n      step1Active: true,\n      step2Active: false,\n      partyA: \"\",\n      partyAOfficer: \"\",\n      partyAOfficerTitle: \"\",\n      partyAEmail: \"\",\n      partyB: \"\",\n      partyBOfficer: \"\",\n      partyBOfficerTitle: \"\",\n      partyBEmail: \"\",\n      ndaLength: \"\",\n      ndaPreviewText: \"\",\n      ndaModalOpen: false,\n      ndaAgreementId: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.openlawRpcEndpoint ||\n        !this.openlawAccountEmail || !this.openlawAccountPassword) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n  }\n\n  processNDA = async(event) => {\n    event.preventDefault();\n    this.setState({loading: true});\n    try {\n      this.apiClient.login(this.openLawConfig.userName, this.openLawConfig.password);\n\n      const ndaTemplate = await this.apiClient.getTemplate(this.openLawConfig.templateName);\n      console.log(ndaTemplate);\n\n      const partyAOLUser = await this.apiClient.getUserDetails(this.state.partyAEmail);\n      console.log(\"partyAOLUser\", partyAOLUser);\n      const partyBOLUser = await this.apiClient.getUserDetails(this.state.partyBEmail);\n      console.log(\"ndaTemplate\", ndaTemplate);\n\n      const ctResponse = Openlaw.compileTemplate(ndaTemplate.content);\n      if (ctResponse.isError) {\n        throw \"Template error: \" + ctResponse.errorMessage;\n      }\n      console.log(\"ctResponse\", ctResponse);\n\n      const params = this.buildOpenLawParamsObj(ndaTemplate, partyAOLUser, partyBOLUser);\n      const executionResult = Openlaw.execute(ctResponse.compiledTemplate, {}, params);\n      const agreements = Openlaw.getAgreements(executionResult.executionResult);\n\n      const html = Openlaw.renderForReview(agreements[0].agreement, {});\n      console.log(\"html\", html);\n\n      this.setState({step1Active: false, step1Complete: true, step2Active: true, ndaPreviewText: html});\n\n    } catch (e) {\n      this.setState({errorMessage: e.toString()});\n      console.log(\"exception caught\", e);\n    }\n    this.setState({loading: false});\n  }\n\n  uploadNDA = async(event) => {\n    event.preventDefault();\n    this.setState({loading: true});\n    try {\n      this.apiClient.login(this.openLawConfig.userName, this.openLawConfig.password);\n\n      const ndaTemplate = await this.apiClient.getTemplate(this.openLawConfig.templateName);\n      const partyAOLUser = await this.apiClient.getUserDetails(this.state.partyAEmail);\n      console.log(\"partyAOLUser\", partyAOLUser);\n      const partyBOLUser = await this.apiClient.getUserDetails(this.state.partyBEmail);\n      console.log(\"ndaTemplate\", ndaTemplate);\n\n      const uploadParams = this.buildOpenLawParamsObj(ndaTemplate, partyAOLUser, partyBOLUser);\n      console.log(\"uploadParams\", uploadParams);\n\n      const result = await this.apiClient.uploadContract(uploadParams);\n      console.log(result);\n\n      this.setState({successMessage: \"processed\", step1Active: false, step1Complete: true});\n      this.setState({ndaModalOpen: true, ndaAgreementId: result});\n\n    } catch (e) {\n      this.setState({errorMessage: e.toString()});\n      console.log(\"exception caught\", e);\n    }\n    this.setState({loading: false});\n  }\n\n  buildOpenLawParamsObj = function(ndaTemplate, userA, userB) {\n    const object = {\n      templateId: ndaTemplate.id,\n      title: this.openLawConfig.templateName,\n      text: ndaTemplate.content,\n      creator: userA.id,\n      parameters: {\n        \"PartyA\": this.state.partyA,\n        \"PartyB\": this.state.partyB,\n        \"Length\": this.state.ndaLength,\n        \"PartyA Email\": JSON.stringify(convertUserObject(userA)),\n        \"PartyA Officer\": this.state.partyAOfficer,\n        \"PartyA Officer Title\": this.state.partyAOfficerTitle,\n        \"PartyB Email\": JSON.stringify(convertUserObject(userB)),\n        \"PartyB Officer\": this.state.partyBOfficer,\n        \"PartyB Officer Title\": this.state.partyBOfficerTitle\n      },\n      overriddenParagraphs: {},\n      agreements: {},\n      readonlyEmails: [],\n      editEmails: [],\n      draftId: \"\"\n    };\n    return object;\n  };\n\n  navigateToNda = async() => {\n    window.open(this.openLawConfig.server + \"/contract/\" + this.state.ndaAgreementId, '_blank')\n  }\n\n  refreshPage = async() => {\n    window.location.reload()\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"OpenLaw\" text=\"be sure to configure the OpenLaw RPC endpoint along with a valid Openlaw account email & password\" />\n      )\n    }\n\n    return (\n      <Container>\n        <Image src={process.env.PUBLIC_URL + '/imgs/top-image.png'} />\n        <Header as='h1' attached='top'>\n          Create New Joint Venture Project \n          <a target='blank' href=\"https://github.com/kaleido-io/kaleido-samples-gallery/tree/master/docs/openlaw\" \n             style={{marginLeft: '50px', fontSize: 'small'}}>view instructions\n          </a>\n        </Header>\n        <Segment attached>\n          <Header.Subheader>New land development, farm exploration, or other joint venture projects</Header.Subheader>\n          <Step.Group ordered>\n            <Step completed={this.state.step1Complete} active={this.state.step1Active}>\n              <Step.Content>\n                <Step.Title>Parties</Step.Title>\n                <Step.Description>Project members</Step.Description>\n              </Step.Content>\n            </Step>\n            <Step active={this.state.step2Active}>\n              <Step.Content>\n                <Step.Title>Non Disclosure</Step.Title>\n                <Step.Description>On OpenLaw</Step.Description>\n                </Step.Content>\n            </Step>\n            <Step>\n              <Step.Content>\n                <Step.Title>Scope Project</Step.Title>\n                <Step.Description>Success criteria</Step.Description>\n              </Step.Content>\n            </Step>\n            <Step>\n              <Step.Content>\n                <Step.Title>Budget</Step.Title>\n              </Step.Content>\n            </Step>\n            <Step>\n              <Step.Content>\n                <Step.Title>Finalize</Step.Title>\n                <Step.Description>On OpenLaw</Step.Description>\n              </Step.Content>\n            </Step>\n          </Step.Group>\n          {this.state.step1Active &&\n            <Segment>\n              <Form loading={this.state.formLoading} error={!!this.state.errorMessage}\n                success={!!this.state.successMessage} onSubmit={this.processNDA}>\n                <Grid columns={2} divided>\n                  <Grid.Row columns={1}>\n                    <Message error header='Error' content={this.state.errorMessage} />\n                    <Message success header='Success' content={this.state.successMessage} />\n                  </Grid.Row>\n                  <Grid.Row style={{marginLeft:'0px'}}>\n                    <Grid.Column>\n                      <Header as=\"h4\">First Participant</Header>\n                        <Form.Input label=\"Company Name\"\n                          type=\"text\" placeholder=\"Corporate name\"\n                          onChange={event => this.setState({partyA: event.target.value})} />\n                        <Form.Input label=\"Officer\"\n                          type=\"text\" placeholder=\"First and last name\"\n                          onChange={event => this.setState({partyAOfficer: event.target.value})} />\n                        <Form.Input label=\"Title\"\n                          type=\"text\" placeholder=\"Officer's title (e.g., COO)\"\n                          onChange={event => this.setState({partyAOfficerTitle: event.target.value})} />\n                        <Form.Input label=\"Email\"\n                          type=\"text\" placeholder=\"Email address where signature form should be sent\"\n                          onChange={event => this.setState({partyAEmail: event.target.value})} />\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Header as=\"h4\">Second Participant</Header>\n                        <Form.Input label=\"Company Name\"\n                          type=\"text\" placeholder=\"Corporate name\"\n                          onChange={event => this.setState({partyB: event.target.value})} />\n                        <Form.Input label=\"Officer\"\n                          type=\"text\" placeholder=\"First and last name\"\n                          onChange={event => this.setState({partyBOfficer: event.target.value})} />\n                        <Form.Input label=\"Title\"\n                          type=\"text\" placeholder=\"Officer's title (e.g., COO)\"\n                          onChange={event => this.setState({partyBOfficerTitle: event.target.value})} />\n                        <Form.Input label=\"Email\"\n                          type=\"text\" placeholder=\"Email address where signature form should be sent\"\n                          onChange={event => this.setState({partyBEmail: event.target.value})} />\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row columns={1} style={{marginLeft:'0px'}}>\n                    <Grid.Column>\n                      <Form.Field inline>\n                        <label>How long do you want the non-disclosure agreement (\"NDA\") to continue after disclosures?</label>\n                        <Input placeholder='years' onChange={event => this.setState({ndaLength: event.target.value})} />\n                      </Form.Field>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row columns={1}>\n                    <Grid.Column textAlign=\"right\">\n                      <Button type={\"submit\"} primary>Go To Non-Disclosure Agreeement</Button>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Form>\n            </Segment>\n          }\n          {this.state.step2Active &&\n            <Segment>\n              <Header>Preview</Header>\n              <Form onSubmit={this.uploadNDA} loading={this.state.formLoading} error={!!this.state.errorMessage}\n                success={!!this.state.successMessage}>\n                <Grid>\n                  <Grid.Row columns={1}>\n                    <Grid.Column textAlign=\"right\">\n                      <Button primary size=\"large\">Begin Signature Process</Button>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row columns={1}>\n                    <Grid.Column>\n                      <div className=\"ndaPreview\" dangerouslySetInnerHTML={{__html: this.state.ndaPreviewText}} />\n                    </Grid.Column>\n                    <Grid.Column>&nbsp;</Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Form>\n              <Modal open={this.state.ndaModalOpen} closeIcon>\n                <Modal.Header>Non-Disclosure Agreement</Modal.Header>\n                <Modal.Content image >\n                  <Image src='/imgs/openlaw-300.png' wrapped size=\"small\" />\n                  <Modal.Description>\n                    <p>You will now be redirected to OpenLaw where both parties will execute the NDA. Evidence of the agreement\n                      will be stored on the blockchain.</p>\n                    <Button primary onClick={this.navigateToNda}>Sign NDA On OpenLaw</Button>\n                    <Button style={{marginLeft: '50px'}} default onClick={this.refreshPage}>close & conclude demo</Button>\n                  </Modal.Description>\n                </Modal.Content>\n              </Modal>\n            </Segment>\n          }\n          <Segment>\n            <p>Agriculture Network is a demonstration project by <strong><a href=\"http://openlaw.io\">OpenLaw </a></strong>\n              and <strong><a href=\"https://kaleido.io\">Kaleido</a></strong>.</p>\n          </Segment>\n        </Segment>\n      </Container>\n    );\n  }\n\n};\n\nfunction convertUserObject(original) {\n  const object = {\n    id: {\n      id: original.id\n    },\n    email: original.email,\n    identifiers: [\n      {\n        identityProviderId: \"openlaw\",\n        identifier: original.identifiers[0].id\n      }\n    ]\n  }\n  return object;\n}\n\nexport default OpenLaw;\n","import React, { Component } from 'react';\nimport utils from './utils'\nimport MissingConfig from './Shared'\n\nclass IDregistry extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false,\n      fetchingDirectory: false,\n      directoryContractAddress: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint || !this.idRegistryRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n    }\n  }\n\n  fetchDirectory = () => {\n    this.setState(() => ({\n      fetchingDirectory: true\n    }), () => {\n      var headers = new Headers();\n      headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n      headers.append('Accept', 'application/json, text/plain, */*',)\n      let url = `${this.idRegistryRpcEndpoint}/api/v1/directories`\n      fetch(url, {\n        method: 'GET',\n        headers: headers\n      }).then(response => response.json())\n      .then(response => {\n        let dir = response[0]\n        this.setState(() => ({\n          directoryContractAddress: dir.directory\n        }))\n      })\n    })\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"ID Registry\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>ID Registry</h2>\n        <h5>\n          The purpose of this sample is to show how you can use Kaleido's ID Registry service to create an organization and\n          add users to that organization.\n        </h5>\n        <br />    \n        { !this.state.directoryContractAddress ? \n        <div>\n          <h6>\n            Fetch directory contract address from ID Registry service\n          </h6>\n          <div className=\"col-sm-5\">\n            <button disabled={this.state.fetchingDirectory} type=\"button\" className=\"btn btn-primary\" \n                    onClick={() => this.fetchDirectory()}>\n              Get contract address\n            </button>\n          </div> \n        </div> : \n        \n        <div>\n          <h6>\n            The directories contract has been deployed to the following address: <i>{this.state.directoryContractAddress}</i>.\n          </h6>\n          <h6>\n            Next up: let's bind your verified organizational identity (i.e. the validated x509 cert) with an Ethereum account and establish an on-chain organizational identity\n          </h6>\n        </div>\n        }\n\n      </main>\n    );\n  }\n}\n\nexport default IDregistry;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/auditlog.json'\nimport utils from './utils'\nimport { Timeline, TimelineBlip } from 'react-event-timeline'\nimport JSONPretty from 'react-json-pretty';\nimport MissingConfig from './Shared'\n\nclass AuditLog extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {\n      missingConfig: false,\n      contractExistsInLocalStorage: localStorage.getItem('auditLogContractAddress') ? true : false,\n      contractAddress: localStorage.getItem('auditLogContractAddress'),\n      validMsg: false,\n      msg: '',\n      addingMsg: false,\n      auditRecordCount: 0,\n      viewRecordId: 0,\n      viewRecordEntityAddress: '',\n      viewPrettyJson: '',\n      viewJsonMessage: 'click record on left to view transaction details',\n      showEditingContract: false,\n      editContractAddress: '',\n      editContractAddressValid: false,\n      modifyingContract: false\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n    if (this.state.contractAddress) {\n      this.getNumberOfRecords()\n    }\n  }\n\n  deployingContract = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => this.deployContract());\n  }\n\n  async getNumberOfRecords() {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    let records = await theContract.methods.getSize().call()\n    this.setState(() => ({\n      auditRecordCount: Number.parseInt(records)\n    }))\n  }\n\n  async deployContract() {\n    let accounts = await this.web3.eth.personal.getAccounts();\n    let theContract = utils.getContract(this.web3, contractJson, '', [])\n    let deployObj = theContract.encodeABI();\n    let params = {\n      from: accounts[0],\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.sendTransaction(params)\n      .on('receipt', (receipt) => {\n        console.log(receipt);\n      })\n      .on('error', (err) => {\n        console.error('Failed to deploy the smart contract. Error: ' + err);\n      })\n      .then((newInstance) => {\n        console.log(newInstance)\n        console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n        this.setState(() => ({\n          contractAddress: newInstance.contractAddress,\n          contractExistsInLocalStorage: true,\n          modifyingContract: false\n        }), () => localStorage.setItem('auditLogContractAddress', newInstance.contractAddress));\n      });\n  }\n\n  msgChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      msg: val,\n      validMsg: this.isJSON(val)\n    }));\n  };\n\n  isJSON = (str) => {\n    if( typeof( str ) !== 'string' ) { \n      return false;\n    }\n    try {\n      JSON.parse(str);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  addMsg = () => {\n    this.setState(() => ({\n      addingMsg: true\n    }), async () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, [])\n      let accounts = await this.web3.eth.personal.getAccounts();\n      let params = {\n        from: accounts[0],\n        gas: 5000000\n      };\n      await theContract.methods.push(accounts[0], this.state.msg).send(params)\n        .on('error', (err) => {\n          console.error('Failed to call the smart contract. Error: ' + err);\n        })\n        .then((resp) => {\n          console.log(resp)\n          this.setState(() => ({\n            msg: '',\n            addingMsg: false,\n            validMsg: false,\n            auditRecordCount: this.state.auditRecordCount + 1\n          }), () => this.fetchRecord(this.state.auditRecordCount - 1));\n        });\n    });\n  };\n\n  renderTimelines() {\n    let records = [], max = 100\n    for (let i = this.state.auditRecordCount - 1; i >= 0 && max > 0; i--, max--) {\n      let color = i % 2 === 0 ? \"#03a9f4\" : \"#6fba1c\"\n      records.push(\n        <div key={i+1} style={{cursor: 'pointer'}} onClick={() => this.fetchRecord(i)}>\n          <TimelineBlip title={`#${i+1}`} iconColor={color}/>\n        </div>)\n    }\n    return records;\n  }\n\n  fetchRecord = (index) => {\n    this.setState(() => ({\n      fetchingRecord: true,\n      viewJsonMessage: `Fetching record #${index+1}...`\n    }), async () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n      let record = await theContract.methods.logEntries(index).call()\n      this.setState(() => ({\n        viewRecordId: index+1,\n        viewPrettyJson: record.payload,\n        viewRecordEntityAddress: record.entityAddress,\n        fetchingRecord: false\n      }));\n    });\n  }\n\n  editingContract = () => {\n    this.setState(() => ({\n      showEditingContract: !this.state.showEditingContract\n    }));\n  }\n\n  clearContract = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => {\n      localStorage.removeItem('auditLogContractAddress')\n      window.location.reload()\n    });\n  }\n\n  changeContractAddress = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.editContractAddress, []);\n      if (!theContract) {\n        alert(\"invalid contract address\")\n        this.setState(() => ({\n          modifyingContract: false\n        }))\n      }\n      localStorage.setItem('auditLogContractAddress', this.state.editContractAddress)\n      window.location.reload()\n    });\n  }\n\n  editContractAddressChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      editContractAddress: val,\n      editContractAddressValid: val.startsWith('0x') && val.length === 42\n    }));\n  };\n\n  editContractPanel = () => {\n    return (\n      <div>        \n        <div className=\"col-sm-12\">\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.editingContract()}>load a previously deployed contract</button>\n        </div>\n        { this.state.showEditingContract ?\n        <div>\n          <small className=\"col-sm-12\">\n            load a previously deployed contract, or, clear the above loaded contract from local storage so you can start over and deploy a brand new one\n          </small>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Audit log contract address</label>\n            <div className=\"col-sm-5\">\n              <input disabled={this.state.modifyingContract} type=\"text\" className=\"form-control\" onChange={this.editContractAddressChanged} />\n            </div>\n            <div className=\"col-sm-5\">\n              <button disabled={!this.state.editContractAddressValid || this.state.modifyingContract} type=\"button\" className=\"btn btn-sm btn-primary\" \n                      onClick={() => this.changeContractAddress()}>\n                load contract\n              </button>\n              { this.state.contractExistsInLocalStorage ? <small style={{marginLeft: '15px'}}>or</small> : null }\n              { this.state.contractExistsInLocalStorage ? \n                <button style={{marginLeft: '15px'}} type=\"button\" className=\"btn btn-sm btn-warning\" disabled={this.state.modifyingContract}\n                        onClick={() => this.clearContract()}>\n                  clear current contract\n                </button> : null }\n            </div>\n          </div>\n        </div>  : null }\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"Audit Log\" />\n      )\n    }\n    const timelinePanel = {\n      overflowY: 'scroll',\n      maxHeight: '500px',\n      borderRight: '1px solid rgba(0,0,0,.1)',\n    }\n    return (\n      <main className=\"container\">\n        <h2>Audit Log</h2>\n        <h5>\n          The purpose of this sample is to show how you can use a simple smart contract as an audit log to view records\n          as they're submitted over time.\n        </h5>\n        <br />\n        { !this.state.contractExistsInLocalStorage ? \n        <div>\n          <h6>\n            Step 1: Deploy a new audit log contract to track log records going forward, or, specify a previously deployed audit log contract\n          </h6>\n          <div className=\"col-sm-3\">\n            <button type=\"button\" className=\"btn btn-success\" \n                    disabled={ this.state.modifyingContract }\n                    onClick={() => this.deployingContract()}>\n              { this.state.modifyingContract ? \"Deploying to blockchain...\" : \"Deploy to blockchain!\" }\n            </button>\n          </div>\n          <small>or</small>\n          {this.editContractPanel()}\n        </div> : null }\n        { this.state.contractAddress ? \n        <div>\n          <h6>\n            The audit log smart contract has been deployed to the following address: \n            <i> {this.state.contractAddress}</i>.\n            <br />\n            {this.editContractPanel()}\n          </h6>\n          <br />\n          <h6>Add new log record by calling a function on the smart contract</h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">JSON payload</label>\n            <div className=\"col-sm-7\">\n              <textarea disabled={this.state.addingMsg} onChange={this.msgChanged} \n                        className=\"form-control\"\n                        rows=\"3\" value = {this.state.msg} />\n            </div>\n            <div className=\"col-sm-3\">\n              <button disabled={this.state.addingMsg || !this.state.validMsg} \n                      type=\"button\" className=\"btn btn-primary\" onClick={() => this.addMsg()}>\n                {this.state.addingMsg ? \"Adding...\" : \"Add\"}\n              </button>\n              {this.state.msg && !this.state.validMsg ? \" invalid json \" : \"\"}\n            </div>\n          </div>\n          {this.state.auditRecordCount > 0 ?\n          <div>\n            <hr />\n            <h6>Audit log history (most recent records appear at top)</h6>\n            <br />\n            <div className=\"row col-sm-12\">\n              <div style={timelinePanel} className=\"col-sm-3\">\n                <Timeline>\n                  {this.renderTimelines()}\n                </Timeline>\n              </div>\n              <div className=\"col-sm-8\">\n                { !this.state.fetchingRecord && this.state.viewRecordId > 0 ?\n                <div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Record #</label>\n                    <div className=\"col-sm-10\">\n                      <input type=\"text\" readOnly={true} className=\"form-control-plaintext\" value={this.state.viewRecordId}></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Entity address</label>\n                    <div className=\"col-sm-10\">\n                      <input type=\"text\" readOnly={true} className=\"form-control-plaintext\" value={this.state.viewRecordEntityAddress}></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Payload</label>\n                    <div className=\"col-sm-10\">\n                      <JSONPretty id=\"json-pretty\" json={this.state.viewPrettyJson} className=\"form-control-plaintext\"></JSONPretty>\n                    </div>\n                  </div> \n                </div> : \n                <div>\n                  { this.state.viewJsonMessage }\n                </div> }\n              </div>\n            </div>\n          </div> : null }\n        </div> : null }\n      </main>\n    );\n  }\n}\n\nexport default AuditLog;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport Configure from './Configure'\nimport HDwallet from './HDwallet'\nimport IPFS from './IPFS'\nimport OpenLaw from './OpenLaw'\nimport IDregistry from './IDregistry'\nimport AuditLog from './AuditLog'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <header className=\"\">\n            <div>\n              <Link to=\"/\">\n                <button className=\"btn btn-link\">Configure</button>\n              </Link>\n              <Link to=\"/hdwallet\">\n                <button className=\"btn btn-link\">HDWallet</button>\n              </Link>\n              <Link to=\"/ipfs\">\n                <button className=\"btn btn-link\">IPFS</button>\n              </Link>\n              <Link to=\"/idregistry\">\n                <button className=\"btn btn-link\">ID Registry</button>\n              </Link>\n              <Link to=\"/openlaw\">\n                <button className=\"btn btn-link\">OpenLaw</button>\n              </Link>\n              <Link to=\"/auditlog\">\n                <button className=\"btn btn-link\">Audit Log</button>\n              </Link>\n            </div>\n          </header>\n          <hr />\n          <div>\n            <Route exact path=\"/\" component={Configure} />\n            <Route exact path=\"/hdwallet\" component={HDwallet} />\n            <Route exact path=\"/ipfs\" component={IPFS} />\n            <Route exact path=\"/idregistry\" component={IDregistry} />\n            <Route exact path=\"/openlaw\" component={OpenLaw} />\n            <Route exact path=\"/auditlog\" component={AuditLog} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}